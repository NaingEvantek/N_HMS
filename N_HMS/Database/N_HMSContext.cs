// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using N_HMS.Models;

namespace N_HMS.Database;

public partial class N_HMSContext : DbContext
{
    public N_HMSContext(DbContextOptions<N_HMSContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Booking_Guest_Mapping_Info> Booking_Guest_Mapping_Infos { get; set; }

    public virtual DbSet<Booking_Info> Booking_Infos { get; set; }

    public virtual DbSet<Currency_Type> Currency_Types { get; set; }

    public virtual DbSet<Floor_Info> Floor_Infos { get; set; }

    public virtual DbSet<Gender_Info> Gender_Infos { get; set; }

    public virtual DbSet<Guest_Info> Guest_Infos { get; set; }

    public virtual DbSet<License> Licenses { get; set; }

    public virtual DbSet<Payment_Status_Info> Payment_Status_Infos { get; set; }

    public virtual DbSet<Role_Info> Role_Infos { get; set; }

    public virtual DbSet<Room_Info> Room_Infos { get; set; }

    public virtual DbSet<Room_Status> Room_Statuses { get; set; }

    public virtual DbSet<Room_Type_Info> Room_Type_Infos { get; set; }

    public virtual DbSet<User_Info> User_Infos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Latin1_General_CI_AI");

        modelBuilder.Entity<Booking_Guest_Mapping_Info>(entity =>
        {
            entity.ToTable("Booking_Guest_Mapping_Info");
        });

        modelBuilder.Entity<Booking_Info>(entity =>
        {
            entity.ToTable("Booking_Info");

            entity.Property(e => e.CheckIn_Date).HasColumnType("datetime");
            entity.Property(e => e.CheckOut_Date).HasColumnType("datetime");
            entity.Property(e => e.Created_Date).HasColumnType("datetime");
            entity.Property(e => e.Modified_Date).HasColumnType("datetime");
            entity.Property(e => e.Net_Amount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Paid_Amount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Total_Amount).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Payment_Status).WithMany(p => p.Booking_Infos)
                .HasForeignKey(d => d.Payment_Status_Id)
                .HasConstraintName("FK_Booking_Info_Payment_Status_Info");
        });

        modelBuilder.Entity<Currency_Type>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Currency");

            entity.ToTable("Currency_Type");

            entity.Property(e => e.Code).HasMaxLength(10);
            entity.Property(e => e.Modify_Date).HasColumnType("datetime");
            entity.Property(e => e.Symbol).HasMaxLength(10);
        });

        modelBuilder.Entity<Floor_Info>(entity =>
        {
            entity.ToTable("Floor_Info");

            entity.Property(e => e.Modified_Date).HasColumnType("datetime");
            entity.Property(e => e.Name).HasMaxLength(255);
        });

        modelBuilder.Entity<Gender_Info>(entity =>
        {
            entity.ToTable("Gender_Info");

            entity.Property(e => e.Name).HasMaxLength(50);
        });

        modelBuilder.Entity<Guest_Info>(entity =>
        {
            entity.ToTable("Guest_Info");

            entity.Property(e => e.Created_Date).HasColumnType("datetime");
            entity.Property(e => e.Name).HasMaxLength(500);
            entity.Property(e => e.Passport_No).HasMaxLength(255);

            entity.HasOne(d => d.Gender).WithMany(p => p.InverseGender)
                .HasForeignKey(d => d.Gender_Id)
                .HasConstraintName("FK_Guest_Info_Guest_Info");
        });

        modelBuilder.Entity<License>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Licenses__3214EC07CB3430EE");

            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.LicenseKey)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<Payment_Status_Info>(entity =>
        {
            entity.ToTable("Payment_Status_Info");

            entity.Property(e => e.Status).HasMaxLength(255);
        });

        modelBuilder.Entity<Role_Info>(entity =>
        {
            entity.ToTable("Role_Info");

            entity.Property(e => e.Name).HasMaxLength(255);
        });

        modelBuilder.Entity<Room_Info>(entity =>
        {
            entity.ToTable("Room_Info");

            entity.Property(e => e.Modify_Date).HasColumnType("datetime");
            entity.Property(e => e.Price_Per_Day).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Room_Name).HasMaxLength(500);

            entity.HasOne(d => d.Currency_Type).WithMany(p => p.Room_Infos)
                .HasForeignKey(d => d.Currency_Type_Id)
                .HasConstraintName("FK_Room_Info_Currency_Type");

            entity.HasOne(d => d.Floor).WithMany(p => p.Room_Infos)
                .HasForeignKey(d => d.Floor_Id)
                .HasConstraintName("FK_Room_Info_Floor_Info");

            entity.HasOne(d => d.Room_Status).WithMany(p => p.Room_Infos)
                .HasForeignKey(d => d.Room_Status_Id)
                .HasConstraintName("FK_Room_Info_Room_Status");

            entity.HasOne(d => d.Room_Type).WithMany(p => p.Room_Infos)
                .HasForeignKey(d => d.Room_Type_Id)
                .HasConstraintName("FK_Room_Info_Room_Type_Info");
        });

        modelBuilder.Entity<Room_Status>(entity =>
        {
            entity.ToTable("Room_Status");

            entity.Property(e => e.Status).HasMaxLength(255);
        });

        modelBuilder.Entity<Room_Type_Info>(entity =>
        {
            entity.ToTable("Room_Type_Info");

            entity.Property(e => e.Modified_Date).HasColumnType("datetime");
            entity.Property(e => e.Name).HasMaxLength(255);
        });

        modelBuilder.Entity<User_Info>(entity =>
        {
            entity.ToTable("User_Info");

            entity.Property(e => e.Created_Date).HasColumnType("datetime");
            entity.Property(e => e.Password_Hash).HasMaxLength(500);
            entity.Property(e => e.User_Name).HasMaxLength(255);

            entity.HasOne(d => d.Role).WithMany(p => p.User_Infos)
                .HasForeignKey(d => d.Role_Id)
                .HasConstraintName("FK_User_Info_Role_Info");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}